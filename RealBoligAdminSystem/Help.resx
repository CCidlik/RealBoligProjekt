<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>CRUD PÅ BOLIG

OPRET BOLIG
Når du skal oprette en ny bolig til salg, skal du indtaste sælgerens Kunde ID (Du kan se KiD under fanetaben ”Kunde Tabel”) for at knytte sælgerens oplysninger til boligsalget. Du skal også indtaste oplysningerne om boligen der er til salg: Post nr, Adresse, Område (kun hvis byen har flere byområder), og boligens kvm. Det sidste du skal gøre, er at sætte din salgsvurdering ind i feltet Salgspris. Alle felter, undtagen Område, skal udfyldes før du kan trykke på Opret Bolig. 
Forslå Pris: Denne funktion kan automatisk generere en pris ud fra den gennemsnitlige kvm i det givende postnr. Der skal dog være oprettet boliger i forvejen med et tilsvarende postnr., for at funktionen virker.

SØG BOLIG
Her kan du søge efter en bestemt bolig, eller udprinte oplysninger til en tekstfil. Du kan vælge om husene skal være solgte, til salg, eller begge dele. Du kan vælge fra en bestemt periode og til nu, og til en bestemt pris.

OPDATER BOLIG
Du kan gøre to ting i denne funktion. Du kan enten ændre salgsprisen på en given bolig, eller ændre boligens status til at være solgt.
For at ændre salgsprisen på boligen skal du: indtaste Bolig ID’et (BiD) på den bolig du gerne vil ændre og derefter indtaste den nye pris huset på huset.
For at ændre boligens status til solgt skal du: indtaste Bolig ID’et (BiD) og indtaste den nuværende salgspris, derefter skal du vinge chekboksen af ved ”Er boligen solgt” og udfylde købers kunde ID (KiD) og handelsprisen, samt handelsdatoen. Alle felterne skal være udfyldt.

SLET BOLIG
Når du skal slette en bolig, så skal du bare indtaste Bolig ID (BiD) og trykke på slet knappen.

CRUD PÅ KUNDE

OPRET KUNDE
For at oprette en kunde skal du udfylde følgende felter: Fulde Navn, Telefon nr., E-Mail og Adresse. Derefter trykker du på ”Opret Kunde” knappen.

SØG KUNDE
Hvis du skal søge efter en kunde, kan du søge på deres Kunde ID eller deres Telefon nummer. Du indtaster det i de respektive felter og trykker på ”søg” knappen. Ønsker at du nulstille din søgning kan du trykke på ”Nulstil Søgning” knappen.

OPDATER KUNDE
For at opdatere en kundes oplysninger skal du ind blot indtaste Kundens ID i feltet: ”Kunde ID” og tryk på knappen ”Søg Kunde”. Nu bliver alle kundens data loadet ind i de nedensteående felter og du kan nu rette i de oplysninger du ønsker. Når du har lavet de ændringer du gerne vil, skal du bare trykke på ”Ret Kunde Oplysninger”. Alle felter skal være udfyldte.

SLET KUNDE
Når du skal slette en kunde, så skal du bare indtaste Kunde ID (KiD) og trykke på slet knappen.

CRUD PÅ MÆGLER

OPRET MÆGLER
For at oprette en Mægler skal du udfylde følgende felter: Fulde Navn, Telefon nr. og E-Mail Derefter trykker du på ”Opret Mægler” knappen.

SØG MÆGLER
Hvis du skal søge efter en mægler, kan du søge på deres Mægler ID (AiD) eller deres Telefon nummer. Du indtaster det i de respektive felter og trykker på ”søg” knappen. Ønsker at du nulstille din søgning kan du trykke på ”Nulstil Søgning” knappen.

OPDATER MÆGLER
For at opdatere en Mæglerens oplysninger skal du ind blot indtaste mæglerens ID i feltet: ”Mægler ID” og tryk på knappen ”Søg Mægler”. Nu bliver alle mæglerens data loadet ind i de nedenstående felter og du kan nu rette i de oplysninger du ønsker. Når du har lavet de ændringer du gerne vil, skal du bare trykke på ”Ret Kunde Oplysninger”. Alle felter skal være udfyldte.

SLET MÆGLER
Når du skal slette en Mægler, så skal du bare indtaste Mægler ID (AiD) og trykke på slet knappen.</value>
  </data>
</root>